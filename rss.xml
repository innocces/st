<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Self Talk Blog</title>
        <link>https://innocces.github.io/st/</link>
        <description>Self Talk Blog</description>
        <lastBuildDate>Mon, 26 Dec 2022 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-Hans</language>
        <copyright>Copyright © 2022 innocces, Inc.Built with st.</copyright>
        <item>
            <title><![CDATA[2022-12-26 daisyUI、Docus、fnm、Tailwind Pocket & V4、Next13.1、TypeScript 4.9、Bun 0.4.0]]></title>
            <link>https://innocces.github.io/st/2022-12-26094619</link>
            <guid>2022-12-26094619</guid>
            <pubDate>Mon, 26 Dec 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[整合来源包含 咲奈的平行时空、 各种前端论坛以及吹水群]]></description>
            <content:encoded><![CDATA[<blockquote><p>整合来源包含 <a href="https://t.me/SakinaSpace" target="_blank" rel="noopener noreferrer">咲奈的平行时空</a>、 各种前端论坛以及吹水群</p></blockquote><p><img loading="lazy" src="https://blog-pic.deno.dev/2022-12-23/1671805036303-20221226blog.jpeg" alt="blog pic" class="img_jWLO"></p><blockquote><p>最近大家不要毒奶自己. 真的很治嚣张的人!!!</p></blockquote><p>摘要</p><ul><li><p>daisyUI</p></li><li><p>docus</p></li><li><p>fnm</p></li><li><p>tailwind Pocket</p></li><li><p>tailwind v4</p></li><li><p>Next13.1</p></li><li><p>TypeScript 4.9</p></li><li><p>bun v0.4.0</p></li></ul><h2 class="anchor anchorWithStickyNavbar_yfMR" id="daisyui">daisyUI<a class="hash-link" href="#daisyui" title="标题的直接链接">​</a></h2><p><a href="https://github.com/saadeghi/daisyui" target="_blank" rel="noopener noreferrer">daisyUI Github</a></p><p><img loading="lazy" src="https://blog-pic.deno.dev/2022-12-23/1671802119465-daisyUI.png" alt="daisyUI PIC" class="img_jWLO"></p><p>近些年不管是 HeadlessUI 还是 CSSUI 都很火. 这当中的集大成者莫过于是 Tailwind 了. daisyUI 就是以 Tailwind 为宿主所衍生的一个框架、编译器无关的 CSSUI 组件库. 高达 40+个组件可用. 并且提供了很多套主题. 当然这些都是可选的. 你可以通过<a href="https://daisyui.com/docs/config/" target="_blank" rel="noopener noreferrer">配置</a>来进行个性化定制.</p><p>一些使用场景:</p><ol><li><p>配合一些 HeadlessUI 得库来进行 UI 布局. 比如 Adobe 的 <a href="https://github.com/adobe/react-spectrum/tree/main/packages/%40react-aria" target="_blank" rel="noopener noreferrer">react-aria</a></p></li><li><p>快速建站. 比如一些商品类的门户首页. 只要你的 UI 愿意配合你. 产出一些可用的模版真的很方便. 这不得不说最近 Tailwind 它们的一些 template theme 了. 国外就在卖模版. 新的商机！！！副业可以搞起来了！！</p></li><li><p>文档主题. 并不是所有的文档框架的主题都符合你的喜好. 当你自己要自定义一些文档主题的时候 UI 设计就是一个门槛了. 但 daisyUI 提供了很多套成型的主题. 也许你可以根据这些主题来快速找到你喜欢的配色. 下面要说的 docus 就有这样的示例</p></li><li><p>Astro. 其实这和第三点有点重合. 不过因为 CSS 本就无样式限制. 就很自然的会和 Astro 联想到一起.</p></li></ol><h2 class="anchor anchorWithStickyNavbar_yfMR" id="docus">Docus<a class="hash-link" href="#docus" title="标题的直接链接">​</a></h2><p><a href="https://github.com/nuxt-themes/docus" target="_blank" rel="noopener noreferrer">Docus Github</a></p><p><img loading="lazy" src="https://blog-pic.deno.dev/2022-12-23/1671803137967-docus.png" alt="docus PIC" class="img_jWLO"></p><p>docus v1.2.3 发布了. 感觉自打 1.0 版本之后, 就没有什么新的功能并入了. 一直在修复一些问题和做一些简单的提升</p><p>docus 是以 Nuxt3 为基础的一个文档建站工具. 优点是 Nuxt 很全. 那么 Nuxt 的大部分东西你都可以使用. 并且提供了很多 module 可以使用. 算是你的另一个建文档的选择吧.</p><h2 class="anchor anchorWithStickyNavbar_yfMR" id="fnm">fnm<a class="hash-link" href="#fnm" title="标题的直接链接">​</a></h2><p><a href="https://github.com/Schniz/fnm" target="_blank" rel="noopener noreferrer">fnm Github</a></p><p><img loading="lazy" src="https://blog-pic.deno.dev/2022-12-23/1671803984392-fnm.svg" alt="fnm PIC" class="img_jWLO"></p><p>一个 Rust 开发的 node 多版本管理工具. 可能你比较常知道的是 n/nvm/nvm-windows/pnpm env 等. 但这些工具(除 pnpm)都有端的限制. fnm 是一个全部平台都支持的 node 版本管理工具. 还号称很快(反正 Rust 开发的东西都说它很快).</p><p>你可以快捷的使用 .node-version(.nvmrc 这明显是想吃 nvm 的用户) 文件来标识你当前的项目所使用的 node 版本. 然后通过 <code>fnm use</code> (一股子 nvm 的味道.) 来快速切换 node 版本.</p><p>下载对应版本</p><div class="language-bash codeBlockContainer_u9qM theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_jm0m"><pre tabindex="0" class="prism-code language-bash codeBlock_Tj6U thin-scrollbar"><code class="codeBlockLines_k4aa"><span class="token-line" style="color:#393A34"><span class="token plain">$ fnm </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">18</span><br></span></code></pre><div class="buttonGroup_oe9o"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_cRWi" aria-hidden="true"><svg class="copyButtonIcon_u5rO" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_rKVj" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>总体从 nvm 切换到 fnm 的成本不大. 看你喜欢了</p><p>我想吐槽的一点是. 你的官网地址是摆着唬人的么. 一波<a href="https://github.com/Schniz/fnm/blob/master/site/vercel.json#L7" target="_blank" rel="noopener noreferrer">重定向</a>回 github？？？？</p><h2 class="anchor anchorWithStickyNavbar_yfMR" id="tailwind-pocket">Tailwind Pocket<a class="hash-link" href="#tailwind-pocket" title="标题的直接链接">​</a></h2><p><a href="https://tailwindui.com/templates/pocket" target="_blank" rel="noopener noreferrer">Tailwind Pocket Website</a></p><p><img loading="lazy" src="https://blog-pic.deno.dev/2022-12-23/1671805608410-pocket-preview.png" alt="Pocket PIC" class="img_jWLO"></p><p>炒个冷饭. Tailwind + Framer Motion 打造的一个移动终端的模版.</p><p>$299!!! 你自己想吧！！！</p><p>不过大家真的可以尝试一下 <a href="https://www.framer.com/motion/" target="_blank" rel="noopener noreferrer">Framer Motion</a>. so cool!!!</p><h2 class="anchor anchorWithStickyNavbar_yfMR" id="tailwind-v4">Tailwind V4<a class="hash-link" href="#tailwind-v4" title="标题的直接链接">​</a></h2><p>11.22 号, 作者 Adam 发布了对 V4 的展望:<br>
<!-- -->Goals for Tailwind CSS v4.0:</p><p>🤏 Simplify mental model, fewer framework-specific concepts<br>
<!-- -->🪄 Less configuration, without less power<br>
<!-- -->✂️ Fewer dependencies<br>
<!-- -->⚡️ 10x faster</p><p>Aggressively defend against complexity, double down on robustness and stability 🤝</p><p>(就是说. 数字焦虑可以去掉的)</p><p>然后 20 号来了一波投票</p><p><img loading="lazy" src="https://blog-pic.deno.dev/2022-12-23/1671806504570-tailwindv4.png" alt="v4 PIC" class="img_jWLO"></p><p>Rust 的选项支持度是最高的. 2202 年了. 马上 3202 年了. xdm, Rust 可能真的要搞起来了.</p><h2 class="anchor anchorWithStickyNavbar_yfMR" id="next131">Next13.1<a class="hash-link" href="#next131" title="标题的直接链接">​</a></h2><p><a href="https://nextjs.org/blog/next-13-1" target="_blank" rel="noopener noreferrer">Next13.1 blog</a></p><p><img loading="lazy" src="https://blog-pic.deno.dev/2022-12-23/1671806150883-next13-1.png" alt="Next13.1 PIC" class="img_jWLO"></p><p>就是小. 缩减 bundle. 主动集成了 <a href="https://nextjs.org/blog/next-13-1#import-resolution-for-smaller-bundles" target="_blank" rel="noopener noreferrer"><code>babel-plugin-transform-imports</code></a>. 对应的 swc 也使用了 <code>modularizeImports</code>. emmmm~ 其实我 swc 体感不好. 可能我没怎么深入使用, 所以我说的也没啥可信度. 哈哈哈哈哈哈</p><h2 class="anchor anchorWithStickyNavbar_yfMR" id="typescript-49">TypeScript 4.9<a class="hash-link" href="#typescript-49" title="标题的直接链接">​</a></h2><p><a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-9-beta" target="_blank" rel="noopener noreferrer">announcing-typescript-4-9-beta</a></p><p><img loading="lazy" src="https://blog-pic.deno.dev/2022-12-24/1671870054781-satisfies.png" alt="TypeScript 4.9" class="img_jWLO"></p><p>这也是个冷饭. 但是值得提一下</p><p>感觉通篇其实在讲述关于联合类型上我们如何让 TS 更智能的来推断类型. 就像推文中说的:</p><blockquote><p>we want to ensure that some expression matches some type, but also want to keep the most specific type of that expression for inference purposes.</p></blockquote><p>比如图中的例子. 当你访问 <code>green.startsWith</code> 的时候会得到错误提示 <code>Property 'startsWith' does not exist on type 'Color'.</code>. 这是因为使用断言将 <code>green</code> 定义为了联合类型 <code>Color</code>. 以前我们想要让 TS 正确推导出类型需要进行类型判断: <code>typeof green === 'string' &amp;&amp; green.startsWith</code>. 这个时候就可以正常使用了. 而 <strong>satisfies</strong> 的出现我们可以省去判断的一步直接获得正确的类型. 甚至可以和 <strong>as const</strong> 联用获取到精准的值类型.</p><h2 class="anchor anchorWithStickyNavbar_yfMR" id="bun-v040">Bun V0.4.0<a class="hash-link" href="#bun-v040" title="标题的直接链接">​</a></h2><p><a href="https://bun.sh/blog/bun-v0.4.0" target="_blank" rel="noopener noreferrer">Bun V0.4.0 blog</a></p><p><img loading="lazy" src="https://blog-pic.deno.dev/2022-12-25/1671928037436-bunx.gif" alt="Bun V0.4.0" class="img_jWLO"></p><p>释出了 <code>bunx</code> 命令. <code>100x fast npx</code> 的 slogen. 真是天下武功, 唯快不破. 但其实对我来说目前 <code>pnpx</code> 也管够用</p><h2 class="anchor anchorWithStickyNavbar_yfMR" id="常用网站推荐">常用网站推荐<a class="hash-link" href="#常用网站推荐" title="标题的直接链接">​</a></h2><ul><li><p><a href="https://dev.to/" target="_blank" rel="noopener noreferrer">DEV</a></p></li><li><p><a href="https://medium.com/?tag=javascript" target="_blank" rel="noopener noreferrer">Medium</a></p></li><li><p><a href="https://github.com/" target="_blank" rel="noopener noreferrer">Github</a></p></li><li><p><a href="https://stackoverflow.com/" target="_blank" rel="noopener noreferrer">Stackoverflow</a></p></li><li><p><a href="https://www.v2ex.com/" target="_blank" rel="noopener noreferrer">V2</a></p></li><li><p><a href="https://www.producthunt.com/discussions?category=developers" target="_blank" rel="noopener noreferrer">Producthunt</a></p></li></ul>]]></content:encoded>
            <category>daisyUI</category>
            <category>Docus</category>
            <category>fnm</category>
            <category>Tailwind Pocket &amp; V4</category>
            <category>Next13.1</category>
            <category>TypeScript 4.9</category>
            <category>Bun 0.4.0</category>
        </item>
    </channel>
</rss>